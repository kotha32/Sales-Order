import type { Target } from '@sap-ux/odata-annotation-core-types';
import type { ODataAnnotations } from './types';
/**
 * Converts OData annotations to SAP annotations.
 */
export declare class SAPAnnotationConverter {
    private targets;
    private labels;
    private targetProperties;
    /**
     * Converts OData annotations to SAP annotations.
     *
     * @param annotations - A list of OData annotations.
     * @returns Targets with SAP annotations.
     */
    convertAnnotations(annotations: ODataAnnotations[]): Target[];
    private getTarget;
    private addLabel;
    /**
     * Gets target node by name and collects annotated properties.
     *
     * @param targetName - Name of the target entity.
     * @param propertyName - Name of the property.
     * @returns Target node.
     */
    private getPropertyTarget;
    private processLineItems;
    private processFieldGroups;
    /**
     * Adds facet annotations.
     * **Important** this needs to happen at the end of all annotation processing to correctly
     * attach facet annotation.
     *
     * @param annotations - OData annotations.
     */
    private processFacets;
    /**
     * Adds labels from multiple sources.
     * Priority is in annotation processing order (LineItem > FieldGroup).
     */
    private processLabels;
}
/**
 * Converts OData annotations to SAP annotations.
 *
 * @param input Targets grouped by files with OData annotations.
 * @returns Targets with SAP annotations.
 */
export declare function convertTargets(input: Record<string, Target[]>): Target[];
//# sourceMappingURL=converter.d.ts.map